<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuecheng.content.mapper.CourseCategoryMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="CourseCategory">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="label" property="label"/>
        <result column="parentid" property="parentid"/>
        <result column="is_show" property="isShow"/>
        <result column="orderby" property="orderby"/>
        <result column="is_leaf" property="isLeaf"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, label, parentid, is_show, orderby, is_leaf
    </sql>

    <!--
        递归查询课程分类的树形结构
        课程分类在数据库中以树形结构存储，子节点的 parentid 指向父节点的 id
        查询结果按照 id 和 orderby 排序
        使用递归查询的好处是可以查询任意层级的节点，无需提前知道层数
    -->
    <select id="selectTreeNodes" parameterType="string" resultType="CourseCategoryTreeDto">
        -- `cte` is an alias for the result (a virtual table) of WITH clause
        WITH RECURSIVE cte AS (
            -- get root node whose id is a variable
            SELECT * FROM course_category WHERE id = #{courseId}

            -- merge the recursive result to `cte`
            UNION ALL

            -- recursive operation
            SELECT child.* FROM course_category child INNER JOIN cte parent ON child.parentid = parent.id
        )
        -- select all from virtual table `cte` and sort the records by column `id` and `orderby`
        SELECT * FROM cte ORDER BY cte.id, cte.orderby
    </select>

</mapper>
