## Haven't been tested yet                                 ##
## Start docker compose: `docker-compose -p sonar up -d`   ##
## - `-p` specifies the name of project (the compose name) ##
## - `-d` means running in detached mode                   ##

version: '3.8'

services:
  mysql:
    image: mysql:8.0.30
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    # volumes:
    #   - /data/mysql/:/var/lib/mysql
    ports:
      - "3304:3306"
    networks:
      - dev-xc

  nacos:
    image: nacos/nacos-server:1.4.1
    container_name: nacos
    restart: always
    environment:
      PREFER_HOST_MODE: hostname
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_DB_NAME: nacos
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: root
    networks:
      - dev-xc
    depends_on:
      - mysql

  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.3.1
    container_name: xxl-job-admin
    restart: always
    environment:
      - spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job_2.3.1?useUnicode=true&serverTimezone=UTC&useSSL=false&characterEncoding=UTF-8&autoReconnect=true
      - spring.datasource.username=root
      - spring.datasource.password=root
    ports:
      - "8088:8080"
    # volumes:
    #   - /data/xxl-job-admin:/data/applogs
    networks:
      - dev-xc
    depends_on:
      - mysql

  minio:
    image: minio/minio:RELEASE.2022-09-07T22-25-02Z
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001" --address ":9000"
    # volumes:
      # - /home/domenic/minio/data:/data
      # - /home/domenic/minio/config:/root/.minio
    networks:
      - dev-xc

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - /data/nginx/html:/usr/share/nginx/html
      - /data/nginx/conf:/etc/nginx
    networks:
      - dev-xc

networks:
  dev-xc:
    driver: bridge